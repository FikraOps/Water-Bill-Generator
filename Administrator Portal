using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace WaterCompany
{
    public partial class AdminForm : Form
    {
        SqlConnection cmx = new SqlConnection(@"Data 
        Source=(LocalDB)\MSSQLLocalDB;Initial Catalog=DBSQ;Integrated Security=True;MultipleActiveResultSets=True;"); //Connection to DB
        SqlCommand asy;

        public AdminForm()
        {
            InitializeComponent();
            misc();
         }

        private void ClearX () //method to clear all textboxes on the admin form once the 
        clear event is initiated
        {
            adminaddressTxtbox.Text = "";
            adminadjustmentsTxtbox.Text = "";
            adminbalancebfwdTxtbox.Text = "";
            adminbilldateTxtbox.Text = "";
            admincurrreadingTxtbox.Text = "";
            admincustnumberTxtbox.Text = "";
            admindepositTxtbox.Text = "";
            adminduedateTxtbox.Text = "";
            adminepiTxtbox.Text = "";
            adminoverdueTxtbox.Text = "";
            adminpaymentTxtbox.Text = "";
            adminpremnumberTxtbox.Text = "";
            adminprevreadingTxtbox.Text = "";
            adminreadingtypeTxtbox.Text = "";
            adminstatusTxtbox.Text = "";
            admincustnameTxtbox.Text = "";
            meternumberTxtbox.Text = "";
            metertypeTxtbox.Text = "";
            currconsumptionTxtbox.Text = "";
        }

        private void adminupdatebtn_Click(object sender, EventArgs e) // Admin Form Update Event btn
        {
            	if (adminaddressTxtbox.Text != "" && adminadjustmentsTxtbox.Text != "" && 
                  adminbalancebfwdTxtbox.Text != "" && adminbilldateTxtbox.Text != "" && admincurrreadingTxtbox.Text != "" 
                  && admincustnumberTxtbox.Text != "" && admindepositTxtbox.Text != "" && adminduedateTxtbox.Text != "" 
                  && adminepiTxtbox.Text != "" && adminoverdueTxtbox.Text != "" && adminpaymentTxtbox.Text != "" 
                  && adminpremnumberTxtbox.Text != "" && adminprevreadingTxtbox.Text != "" && adminreadingtypeTxtbox.Text != "" 
                  && adminstatusTxtbox.Text != "" && admincustnameTxtbox.Text != "" && metertypeTxtbox.Text!="" && meternumberTxtbox.Text!="" 
                  && currconsumptionTxtbox.Text!="")

                  {

                    	asy = new SqlCommand("Update CustomerDataTable set CustomerName=@CustomerName,BillDate=@BillDate,ServiceAddress=@ServiceAddress,
                      Adjustments=@Adjustments,BalanceBFwd=@BalanceBFwd,CurrReading=@CurrReading,Deposit=@Deposit,DueDate=@DueDate,EarlyPaymentIncentive=
                      @EarlyPaymentIncentive,OverdueAmt=@OverdueAmt,Payment=@Payment,PrevReading=PrevReading,ReadingType=@ReadingType,Status=@Status,
                      MeterNumber=@MeterNumber,MeterType=@MeterType,CurrConsumption=@CurrConsumption WHERE PremisesNumber=@PremisesNumber and  
                      CustomerNumber=@CustomerNumber", cmx);
                   
                      cmx.Open();

                    asy.Parameters.AddWithValue("@BillDate", adminbilldateTxtbox.Text);         //DB Parameters and their correspoding text boxes on the form 
                    asy.Parameters.AddWithValue("@ServiceAddress", adminaddressTxtbox.Text);
                    asy.Parameters.AddWithValue("@Adjustments", adminadjustmentsTxtbox.Text);
                    asy.Parameters.AddWithValue("@BalanceBFwd", adminbalancebfwdTxtbox.Text);
                    asy.Parameters.AddWithValue("@CurrReading", admincurrreadingTxtbox.Text);
                    asy.Parameters.AddWithValue("@CustomerNumber", admincustnumberTxtbox.Text);
                    asy.Parameters.AddWithValue("@CustomerName", admincustnameTxtbox.Text);
                    asy.Parameters.AddWithValue("@Deposit", admindepositTxtbox.Text);
                    asy.Parameters.AddWithValue("@DueDate", adminduedateTxtbox.Text);
                    asy.Parameters.AddWithValue("@EarlyPaymentIncentive", adminepiTxtbox.Text);
                    asy.Parameters.AddWithValue("OverdueAmt", adminoverdueTxtbox.Text);
                    asy.Parameters.AddWithValue("@Payment", adminpaymentTxtbox.Text);
                    asy.Parameters.AddWithValue("@PremisesNumber", adminpremnumberTxtbox.Text);
                    asy.Parameters.AddWithValue("@PrevReading", adminprevreadingTxtbox.Text);
                    asy.Parameters.AddWithValue("@ReadingType", adminreadingtypeTxtbox.Text);
                    asy.Parameters.AddWithValue("@Status", adminstatusTxtbox.Text);
                    asy.Parameters.AddWithValue("@MeterNumber", meternumberTxtbox.Text);
                    asy.Parameters.AddWithValue("@MeterType", metertypeTxtbox.Text);
                    asy.Parameters.AddWithValue("@CurrConsumption", currconsumptionTxtbox.Text);
                    int v = asy.ExecuteNonQuery();
                    cmx.Close();
                    
                    MessageBox.Show("Record Has Been Updated!");
                    ClearX();
		            }
                else
                {
                  MessageBox.Show("Error! Record Has not been Updated");
                }
          }

          private void admininsertbtn_Click(object sender, EventArgs e) //Admin Form insert event btn
          {
            	if (adminaddressTxtbox.Text != "" && adminadjustmentsTxtbox.Text != "" && dminbalancebfwdTxtbox.Text != "" && 
              adminbilldateTxtbox.Text != "" && admincurrreadingTxtbox.Text != "" && admincustnumberTxtbox.Text != "" && 
              admindepositTxtbox.Text != "" && adminduedateTxtbox.Text != "" && adminepiTxtbox.Text != "" && adminoverdueTxtbox.Text != "" 
              && adminpaymentTxtbox.Text != "" && adminpremnumberTxtbox.Text != "" && adminprevreadingTxtbox.Text != "" && 
              adminreadingtypeTxtbox.Text != "" && adminstatusTxtbox.Text != "" && admincustnameTxtbox.Text != "" && metertypeTxtbox.Text != 
              "" && meternumberTxtbox.Text != "" && currconsumptionTxtbox.Text!="")
              
              {

                	asy = new SqlCommand("Insert into CustomerDataTable (CustomerName,BillDate,ServiceAddress,Adjustments,BalanceBFwd,CurrReading,
                  CustomerNumber,Deposit,DueDate,EarlyPaymentIncentive,OverdueAmt,Payment,PremisesNumber,PrevReading,ReadingType,Status,MeterNumber,
                  MeterType,CurrConsumption) values (@CustomerName,@BillDate,@ServiceAddress,@Adjustments,@BalanceBFwd,@CurrReading,@CustomerNumber,@Deposit,@DueDate,@EarlyPaymentIncentive,@OverdueAmt,@Payment,@PremisesNumber,@PrevReading,@ReadingType,@Status,@MeterNumber,@MeterType,@CurrConsumption)", cmx);
                	
                  cmx.Open();

  			          asy.Parameters.AddWithValue("@BillDate", adminbilldateTxtbox.Text);
                	asy.Parameters.AddWithValue("@ServiceAddress", adminaddressTxtbox.Text);
               	  asy.Parameters.AddWithValue("@Adjustments", adminadjustmentsTxtbox.Text);
                	asy.Parameters.AddWithValue("@BalanceBFwd", adminbalancebfwdTxtbox.Text);
                	asy.Parameters.AddWithValue("@CurrReading", admincurrreadingTxtbox.Text);
                	asy.Parameters.AddWithValue("@CustomerNumber", admincustnumberTxtbox.Text);
                	asy.Parameters.AddWithValue("@CustomerName", admincustnameTxtbox.Text);
                	asy.Parameters.AddWithValue("@Deposit", admindepositTxtbox.Text);
                	asy.Parameters.AddWithValue("@DueDate", adminduedateTxtbox.Text);
                	asy.Parameters.AddWithValue("@EarlyPaymentIncentive", adminepiTxtbox.Text);
                	asy.Parameters.AddWithValue("OverdueAmt", adminoverdueTxtbox.Text);
                	asy.Parameters.AddWithValue("@Payment", adminpaymentTxtbox.Text);
                	asy.Parameters.AddWithValue("@PremisesNumber", adminpremnumberTxtbox.Text);
                	asy.Parameters.AddWithValue("@PrevReading", adminprevreadingTxtbox.Text);
                	asy.Parameters.AddWithValue("@ReadingType", adminreadingtypeTxtbox.Text);
                	asy.Parameters.AddWithValue("@Status", adminstatusTxtbox.Text);
                	asy.Parameters.AddWithValue("@MeterNumber", meternumberTxtbox.Text);
                	asy.Parameters.AddWithValue("@MeterType", metertypeTxtbox.Text);
                	asy.Parameters.AddWithValue("@CurrConsumption", currconsumptionTxtbox.Text);
                	
                  int v = asy.ExecuteNonQuery();
                	cmx.Close();
                	
                  MessageBox.Show("Record Has Been Updated!");
                	ClearX();
              }
              else
              {
                MessageBox.Show("Error! Record Has not been Inserted");
              }
          }

          private void adminclearBtn_Click(object sender, EventArgs e)
          {
            adminaddressTxtbox.Clear();
            adminadjustmentsTxtbox.Clear();
            adminbalancebfwdTxtbox.Clear();
            adminbilldateTxtbox.Clear();
            admincurrreadingTxtbox.Clear();
            admincustnumberTxtbox.Clear();
            admindepositTxtbox.Clear();
            adminduedateTxtbox.Clear();
            adminepiTxtbox.Clear();
            adminoverdueTxtbox.Clear();
            adminpaymentTxtbox.Clear();
            adminpremnumberTxtbox.Clear();
            adminprevreadingTxtbox.Clear();
            adminreadingtypeTxtbox.Clear();
            adminstatusTxtbox.Clear();
            admincustnameTxtbox.Clear();
            metertypeTxtbox.Clear();
            meternumberTxtbox.Clear();
            currconsumptionTxtbox.Clear();
          }

        private void admincancelbtn_Click(object sender, EventArgs e)
        {
            this.Close();
        }


        private void button1_Click(object sender, EventArgs e) // Admin Form View event btn
        {
            SqlConnection conn = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;Initial Catalog=DBSQ;Integrated Security=True");
            conn.Open();

            	SqlCommand komd = new SqlCommand("Select * From CustomerDataTable WHERE CustomerNumber=@CustomerNumber and PremisesNumber=@PremisesNumber", conn);
            	komd.Parameters.AddWithValue("@CustomerNumber", admincustnumberTxtbox.Text);
            	komd.Parameters.AddWithValue("PremisesNumber", adminpremnumberTxtbox.Text);
            	SqlDataReader drx = komd.ExecuteReader();

            if (drx.Read())
            {
                AdminView admin1 = new AdminView(); //Parameters which can be viewed on the click of this event btn

                admin1.avcustnumberTxtbox.Text = drx["CustomerNumber"].ToString();      
                admin1.avpremisesnumberTxtbox.Text = drx["PremisesNumber"].ToString();
                admin1.avaddressTxtbox.Text = drx["ServiceAddress"].ToString();
                admin1.avcustomernameTxtbox.Text = drx["CustomerName"].ToString();
                admin1.avmeternumberTxtbox.Text = drx["MeterNumber"].ToString();
                admin1.avmetertypeTxtbox.Text = drx["MeterType"].ToString();
                admin1.avbilldateTxtbox.Text = drx["BillDate"].ToString();
                admin1.avduedateTxtbox.Text = drx["DueDate"].ToString();
                admin1.avstatusTxtbox.Text = drx["Status"].ToString();
                admin1.avbalancebfwdTxtbox.Text = drx["BalanceBFwd"].ToString();
                admin1.avoverdueTxtbox.Text = drx["OverdueAmt"].ToString();
                admin1.avpaymentTxtbox.Text = drx["Payment"].ToString();
                admin1.avcurrreadingTxtbox.Text = drx["CurrReading"].ToString();
                admin1.avprevreadingTxtbox.Text = drx["PrevReading"].ToString();
                admin1.avreadingtypeTxtbox.Text = drx["ReadingType"].ToString();
                admin1.avdepositTxtbox.Text = String.Format("{0:c}", drx["Deposit"].ToString());
                admin1.avcurrconsumptionTxtbox.Text = drx["CurrConsumption"].ToString();

                admin1.Show();
                this.Close();

            }
            else
            {
                	MessageBox.Show("Incorrect Account Information"); //Message that is shown if the account information entered is incorrect
            }

        }

        private void misc() //display the text below in a richText box on the Admin View Portal
        {
            	adminmiscTxtbox.Text = "To View, only the Customer's Customer & Premises numbers are required.";
        }

    }
}

